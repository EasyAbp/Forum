@page "~/Forum/Post/{id}"
@using Microsoft.Extensions.Localization
@using EasyAbp.Forum.Localization
@using EasyAbp.Forum.Web.Pages.Components.ForumSubCommentsWidget
@model EasyAbp.Forum.Web.Pages.Forum.Post.IndexModel
@inject IStringLocalizer<ForumResource> _l
@{
  var colors = new List<string>
  {
    "#007bff", "#e83e8c", "#6f42c1"
  };
}

@section styles
{
    <abp-style src="/Pages/Forum/Post/index.css"/>
}

@section scripts
{
    <abp-script src="/Pages/Forum/Post/index.js"/>
}

@if (Model.CurrentPage == 1)
{
  <div class="container">
    <div class="row mb-2">
      <div class="col">
        <div class="row no-gutters border rounded overflow-hidden flex-md-row shadow-sm h-md-250 position-relative">
          <div class="col p-4 d-flex flex-column position-static">
            <a asp-page="/Forum/Community/Index" asp-all-route-data="@(new Dictionary<string, string>{{"name", Model.Community.Name}})"><strong class="d-inline-block mb-2 text-primary">@Model.Community.DisplayName</strong></a>
            <h3 class="mb-0">@Model.Post.Title</h3>
            <div class="mt-2 mb-4 text-muted">
              @_l.GetString("PostedBy", Model.Post.CreatorUserName ?? _l["Anonymous"]) <time class="timeago" datetime="@Model.Post.CreationTime">@Model.Post.CreationTime</time>
            </div>
            <div class="card-text mb-auto">@Model.Post.Content.Text</div>
            <div class="post-action mt-2 d-flex justify-content-between">
              <div class="post-action-left">
                <abp-button class="text-secondary" button-type="Link" size="Small" icon="commenting" text="@_l.GetString("PostCommentCount", Model.PagerModel.TotalItemsCount).Value" />
                <abp-button class="text-secondary" button-type="Link" size="Small" icon="share" text="@_l["Share"].Value"/>
                @if (await Model.CanEditPostAsync())
                {
                  <abp-button class="text-secondary" button-type="Link" size="Small" icon="pencil" text="@_l["Edit"].Value"/>
                }
                @if (await Model.CanDeletePostAsync())
                {
                  <abp-button class="text-secondary" button-type="Link" size="Small" icon="trash" text="@_l["Delete"].Value"/>
                }
              </div>
            </div>
            @if (await Model.CanCreateCommentAsync())
            {
              <form class="create-comment-form" data-ajaxForm="true" asp-page="/Forum/Post/Index">
                <div class="create-comment border-top mt-3 pt-2">
                  <label>@_l.GetString("CommentAs", HttpContext.User.Identity!.Name!)</label>
                  <textarea asp-for="CreateCommentText" class="form-control" placeholder="@_l["CreateCommentTextPlaceholder"]" rows="3"></textarea>
                  <span asp-validation-for="CreateCommentText" class="text-danger"></span>
                  <div class="mt-3 d-flex flex-row-reverse">
                    <abp-button button-type="Primary" size="Small" text="@_l["Submit"].Value" type="submit"/>
                  </div>
                </div>
              </form>
            }
          </div>
        </div>
      </div>
    </div>
  </div>
}

<div class="container">
  <div data-post-id="@Model.PostId" class="comments my-3 p-3 bg-white rounded shadow-sm">
    @if (!Model.Comments.Any())
    {
      <p class="mt-3 text-center text-secondary">@_l["NoComments"]</p>
    }
    @foreach (var (comment, i) in Model.Comments.Select((comment, i) => (comment, i)))
    {
      var color = colors[i % colors.Count];
      <div class="comment media text-muted pt-3" data-comment-id="@comment.Id">
        <svg class="bd-placeholder-img mr-2 rounded" width="32" height="32" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 32x32" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="@color"/></svg>

        <div class="media-body pb-2 mb-0 small lh-125 border-bottom border-gray">
          <div class="d-flex justify-content-between align-items-center w-100 mb-1">
            <strong class="text-gray-dark">@(comment.CreatorUserName ?? _l["Anonymous"])</strong>
            <time class="timeago" datetime="@comment.CreationTime">@comment.CreationTime</time>
          </div>
          <div class="d-block text-body">@comment.Text</div>
          <div class="comment-action mt-1 d-flex justify-content-between">
            <div class="comment-action-left">
              @if (await Model.CanCreateCommentAsync())
              {
                <abp-button data-comment-id="@comment.Id" class="primary-btn-reply text-secondary" button-type="Link" size="Small" icon="reply" text="@_l["Reply"].Value"/>
              }
              <abp-button data-comment-id="@comment.Id" class="text-secondary" button-type="Link" size="Small" icon="share" text="@_l["Share"].Value"/>
              @if (await Model.CanEditCommentAsync(comment))
              {
                <abp-button data-comment-id="@comment.Id" class="text-secondary" button-type="Link" size="Small" icon="pencil" text="@_l["Edit"].Value"/>
              }
              @if (await Model.CanDeleteCommentAsync(comment))
              {
                <abp-button data-comment-id="@comment.Id" class="text-secondary" button-type="Link" size="Small" icon="trash" text="@_l["Delete"].Value"/>
              }
            </div>
          </div>
          @if (await Model.CanCreateCommentAsync())
          {
            <div class="primary-create-sub-comment create-sub-comment border-top mt-3 pt-2" style="display: none">
              <label>@_l.GetString("CommentAs", HttpContext.User.Identity?.Name ?? _l["Anonymous"])</label>
              <textarea class="form-control primary-create-sub-comment-text" placeholder="@_l["CreateCommentTextPlaceholder"]" rows="3"></textarea>
              <div class="mt-3 d-flex flex-row-reverse">
                <abp-button class="primary-create-sub-comment-submit-btn" button-type="Primary" size="Small" text="@_l["Submit"].Value" />
              </div>
            </div>
          }
          @await Component.InvokeAsync(typeof(ForumSubCommentsWidgetViewComponent), new
          {
            postId = comment.PostId,
            commentId = comment.Id,
            hasChildren = comment.ChildrenCount > 0
          })
        </div>
      </div>
    }
    <abp-paginator model="Model.PagerModel" show-info="true"></abp-paginator>
  </div>
</div>